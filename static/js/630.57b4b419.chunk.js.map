{"version":3,"file":"static/js/630.57b4b419.chunk.js","mappings":"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","sources":["components/UserInfo/UserInfo.styled.jsx","components/Modal/Modal.styles.js","components/Modal/Modal.jsx","components/EditProfile/EditProfile.styled.jsx","components/EditProfile/EditProfile.jsx","components/EditProfile/EditProfileModal.jsx","components/UserInfo/UserInfo.jsx","redux/theme/operations.js","redux/theme/themeSlice.js","redux/theme/selectors.js","components/Sidebar/Sidebar.styled.jsx","components/Button/Button.jsx","components/NeedHelp/NeedHelp.styled.js","schemas/helpSchema.js","components/NeedHelp/NeedHelpForm.jsx","components/NeedHelp/NeedHelpModal.jsx","redux/boards/boardsSelectors.js","schemas/addBoardSchema.js","components/ModalBoard/ModalBoard.styles.js","components/ModalBoard/ModalBoard.jsx","components/ModalBoard/index.js","components/Sidebar/Sidebar.jsx","components/ThemeSelector/ThemeSelector.styled.jsx","components/ThemeSelector/ThemeSelector.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/HeaderDashboard/HeaderDashboard.styled.js","components/HeaderDashboard/HeaderDashboard.jsx","components/Task/Task.styled.js","components/Task/Task.jsx","components/Column/BtnColumn/BtnColumn.styled.js","components/Column/BtnColumn/BtnColumn.jsx","components/Column/ModalColumn/ModalColumn.styled.js","components/Column/ModalColumn/ModalColumn.jsx","components/Column/AddColumn/AddColumn.jsx","components/Column/Column.styled.jsx","components/Column/Column.jsx","components/MainDashboard/MainDashboard.styled.js","components/MainDashboard/MainDashboard.jsx","schemas/initialUserModal.js","components/Dashboard/Dashboard.styled.js","components/Dashboard/Dashboard.jsx","pages/HomePage/HomePage.styled.js","pages/HomePage/HomePage.jsx","images/backgrounds|sync|/^/.//.*/.jpg$"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\ngap: 8px;\nmargin-left: 14px;\n`;\n\nexport const Avatar = styled.img`\n  width: 32px;\n  height: 32px;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  cursor: pointer;\n    `;\n\n   export const UserIcon = styled.svg`\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  stroke: transparent;\n  \n   `;","import styled from '@emotion/styled';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100%;\n\n  background-color: rgba(21, 21, 21, 0.3);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`;\n\nexport const ModalWindow = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  padding: 24px;\n\n  border-radius: 8px;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  background-color: var(--modal_bgc);\n\n  @media screen and (min-width: 375px) {\n    width: 335px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const Heading = styled.h3`\n  margin-bottom: 24px;\n\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n\nexport const CloseBtn = styled.svg`\n  width: 18px;\n  height: 18px;\n  position: absolute;\n  right: 14px;\n  top: 14px;\n  border-radius: 50%;\n  background-color: transparent;\n  cursor: pointer;\n  transition: background-color 250ms ease-in;\n  stroke: var(--close_icon);\n\n  &:hover,\n  :focus {\n    stroke: var(--close_active);\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Sprite from '../../images/sprite.svg';\nimport { Backdrop, CloseBtn, Heading, ModalWindow } from './Modal.styles';\n\nfunction Modal({ children, isOpen, handleClose, heading }) {\n  if (!isOpen) return null;\n\n  document.body.style.overflow = isOpen ? 'hidden' : 'visible';\n\n  const handleKeyDown = event => {\n    if (event.key === 'Escape') {\n      handleClose();\n    }\n  };\n\n  if (isOpen) {\n    window.addEventListener('keydown', handleKeyDown);\n  }\n\n  return ReactDOM.createPortal(\n    <Backdrop onClick={handleClose}>\n      <ModalWindow onClick={e => e.stopPropagation()}>\n        <Heading>{heading}</Heading>\n        <CloseBtn onClick={handleClose}>\n          <use xlinkHref={`${Sprite}#icon-x-close`} />\n        </CloseBtn>\n        <div>{children}</div>\n      </ModalWindow>\n    </Backdrop>,\n    document.getElementById('modal-root')\n  );\n}\nexport default Modal;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const EditProfileModal = styled.div`\n// position: absolute;\n// top: 50%;\n// left: 50%;\n// transform: translate(-50%, -50%);\n// width: 100%;\n// padding: 24px;\n\n// border-radius: 8px;\n// box-shadow: 0px 2px 4px 0px rgba(22, 22, 22, 1);\n// // transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n// background-color: var(--modal_bgc);\n\n// cubic-bezier(0.4, 0, 0.2, 1)\n//  @media screen and (min-width: 375px) {\n//   width: 335px;\n// }\n// @media screen and (min-width: 768px) {\n//   width: 400px;\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 14px;\n   font-size: 14px;\n  font-weight: 400;\n  letter-spacing: -0.28px;\n`;\n\nexport const LabelPass = styled.label`\nposition: relative;\nwidth:100%;\n`;\n\nexport const LabelText = styled.label`\nwidth:100%;\n`;\n\nexport const FieldUser = styled(Field)`\n  width:100%;\n    height: 49px;\n    color: var(--modal_main_color);\n    background-color: var(--modal_field);\n    opacity: 0.4;\n    border: 1px solid #bedbb0;\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px rgba(22, 22, 22, 0.08);\n    border-radius: 8px;\n\n    outline: none;\n    transition: all 500ms;\n\n    &:hover,\n    &:focus,\n    &:active {\n      opacity: 1;\n      box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n    }\n`;\n\nexport const IconUserWrapper = styled.label`\n  width: 68px;\n  height: 78px;\n  position: relative;\n  margin: 24px auto 25px;\n  border-radius: 8px;\n  background-position: center;\n  cursor: pointer;\n\n  // &:hover,\n  // &:focus,\n  // &:active {\n  //   opacity: 1;\n  //   box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  // }\n`;\n\nexport const AvatarImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport const SaveBtn = styled.button`\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  background: var(--create_normal);\n  border-radius: 8px;\n  border: 1px solid var(--create_normal);\n  cursor: pointer;\n\n  // &:hover,\n  // &:focus,\n  // &:active {\n  //   background: var(--create_active);\n    // }\n\n    &:hover,\n  &:focus,\n  &:active {\n      opacity: 0.8;\n    }\n\n  @media screen and (max-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const FileInput = styled.input`\n  position: absolute;\n  opacity: 0;\n  display: none;\n  width:100%\n`;\n\nexport const NoneInput = styled.input`\n  display: none;\n`;\n\nexport const PlusBtn = styled.button`\n  position: absolute;\n  bottom: -15%;\n  left: 30%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n\n  width: 28px;\n  height: 28px;\n  border: none;\n  background: var(--user_bgc);\n\n  transition: all 150ms linear;\n  cursor: pointer;\n\n  &:hover,\n  &:focus,\n  &:active  {\n    background: var(--create_active);\n  }\n`;\n\nexport const TextBtn = styled(Form)`\nfont-family: Poppins;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nletter-spacing: -0.28px;\ncolor: var(--save-color);\n`;\n\nexport const IconPlus = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: #161616; \n  z-index: 99;\n  `;\n\nexport const PasswordView = styled.span`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n`;\n\nexport const PasswordIcon = styled.img`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n  `;\n\nexport const Svg = styled.svg`\n  width: 16.5px;\n  height: 16px;\n  top: 50%;\n  right: 4px;\n  fill: transparent;\n`;\n\n","import React from 'react';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  EditProfileModal,\n  FormBox,\n  AvatarImage,\n  FieldUser,\n  NoneInput,\n  PlusBtn,\n  IconPlus,\n  IconUserWrapper,\n  SaveBtn,\n  PasswordView,\n  PasswordIcon,\n  Svg,\n  LabelPass,\n  LabelText,\n  TextBtn,\n} from './EditProfile.styled';\nimport { updateUser, updateUserAvatar } from 'redux/auth/operations';\nimport { selectUser } from 'redux/auth/selectors';\nimport Sprite from '../../images/sprite.svg';\nimport eyeHide from '../../images/eye-hide.svg';\n\nconst EditProfile = ({ onSave }) => {\n  const { username, email, password, avatarURL } = useSelector(selectUser);\n  const [showPassword, setShowPassword] = useState(false);\n  const [avatarNewURL, setAvatarNewURL] = useState(avatarURL);\n\n  const dispatch = useDispatch();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleFormSubmit = async values => {\n    console.log(values);\n\n    dispatch(\n      updateUser({\n        username: values.newName,\n        email: values.newEmail,\n        password: values.newPassword,\n      })\n    );\n\n    if (avatarNewURL !== values.newPhoto) {\n      dispatch(updateUserAvatar(avatarNewURL));\n    }\n    onSave();\n  };\n\n  const handleAvatarClick = e => {\n    const selectedFile = e.target.files[0];\n    if (selectedFile && selectedFile.type.startsWith('image/')) {\n      const formData = new FormData();\n      formData.append('avatar', selectedFile);\n      setAvatarNewURL(formData);\n    }\n  };\n\n  return (\n    <EditProfileModal>\n      <Formik\n        initialValues={{\n          newPhoto: avatarNewURL,\n          newName: username,\n          newEmail: email,\n          newPassword: password,\n        }}\n        onSubmit={handleFormSubmit}\n      >\n        {({ isSubmitting, values, setFieldValue }) => (\n          <FormBox>\n            <IconUserWrapper>\n              {values.newPhoto ? (\n                <AvatarImage\n                  type=\"file\"\n                  name=\"newPhoto\"\n                  alt=\"Avatar\"\n                  src={values.newPhoto}\n                />\n              ) : (\n                <svg className=\"icon-user\" width=\"68\" height=\"68\">\n                  <use href={`${Sprite}#icon-user`} />\n                </svg>\n              )}\n              <PlusBtn\n                onClick={() => document.getElementById('newPhotoInput').click()}\n              >\n                <IconPlus>\n                  <use href={`${Sprite}#icon-plus-us`} />\n                </IconPlus>\n                <NoneInput\n                  type=\"file\"\n                  id=\"newPhotoInput\"\n                  name=\"newPhoto\"\n                  onChange={event => {\n                    setFieldValue(\n                      'newPhoto',\n                      URL.createObjectURL(event.currentTarget.files[0])\n                    );\n                    handleAvatarClick(event);\n                  }}\n                />\n              </PlusBtn>\n            </IconUserWrapper>\n\n            <LabelText>\n              <FieldUser type=\"text\" name=\"newName\" />\n              <ErrorMessage name=\"newName\" component=\"div\" />\n            </LabelText>\n\n            <LabelText>\n              <FieldUser type=\"email\" name=\"newEmail\" />\n              <ErrorMessage name=\"newEmail\" component=\"div\" />\n            </LabelText>\n\n            <LabelPass>\n              <FieldUser\n                type={showPassword ? 'text' : 'password'}\n                id=\"password\"\n              />\n              <PasswordView onClick={togglePasswordVisibility}>\n                {showPassword ? (\n                  <PasswordIcon src={eyeHide} />\n                ) : (\n                  <Svg>\n                    <use stroke=\"gray\" href={`${Sprite}#eye-password`} />\n                  </Svg>\n                )}\n              </PasswordView>\n              <ErrorMessage name=\"newPassword\" component=\"div\" />\n            </LabelPass>\n\n            <SaveBtn type=\"submit\" disabled={isSubmitting}>\n              <TextBtn>Save</TextBtn>\n            </SaveBtn>\n          </FormBox>\n        )}\n      </Formik>\n    </EditProfileModal>\n  );\n};\n\nexport default EditProfile;\n","import Modal from 'components/Modal/Modal';\nimport EditProfile from './EditProfile';\n\nconst EditProfileModal = ({ onClose }) => {\n  const handleCloseModal = () => {\n    onClose();\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={true}\n        handleClose={handleCloseModal}\n        heading={'Edit profile'}\n      >\n        <EditProfile onClose={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default EditProfileModal;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Container, Avatar, UserIcon } from './UserInfo.styled';\nimport EditProfileModal from 'components/EditProfile/EditProfileModal';\nimport Sprite from '../../images/sprite.svg';\nimport { selectUser } from 'redux/auth/selectors';\n\nconst UserInfo = ({ theme }) => {\n  const { username, avatarURL } = useSelector(selectUser);\n  const [isEditProfileModalOpen, setIsEditProfileModalOpen] = useState(false);\n\n  const openEditProfileModal = () => {\n    setIsEditProfileModalOpen(true);\n  };\n\n  const closeEditProfileModal = () => {\n    setIsEditProfileModalOpen(false);\n  };\n\n  return (\n    <Container>\n      <div>{username}</div>\n      {avatarURL ? (\n        <Avatar\n          src={avatarURL}\n          alt=\"User Avatar\"\n          onClick={openEditProfileModal}\n        />\n      ) : (\n        <UserIcon\n          className={`icon-user theme-${theme}`}\n          onClick={openEditProfileModal}\n        >\n          <use href={`${Sprite}#icon-user`} />\n        </UserIcon>\n      )}\n      {isEditProfileModalOpen && <EditProfileModal onClose={closeEditProfileModal} />}\n         </Container>\n  );\n};\n\nexport default UserInfo;\n\n\n\n\n\n\n// import React from 'react';\n// import { useSelector } from 'react-redux';\n// import { Container, Avatar,  UserIcon  } from './UserInfo.styled';\n// import EditProfile from 'components/EditProfile/EditProfile';\n// import Sprite from '../../images/sprite.svg';\n\n// const setAvatarIcon = (activeUserTheme) => {\n//   switch (activeUserTheme) {\n//        case 'light':\n//       return '#icon-userlight';\n//       case 'dark':\n//       return '#icon-userdark';\n//     case 'violet':\n//       return '#icon-userviolet';\n//     default:\n//       return '#icon-userlight';\n//   }\n// };\n\n// const UserInfo = ({theme}) => {\n//   const { avatarURL, username } = useSelector(state => state.profile);\n//   const [isModalOpen, setModalOpen] = React.useState(false);\n\n//   const openModal = () => {\n//     setModalOpen(true);\n//   };\n\n//   const closeModal = () => {\n//     setModalOpen(false);\n//   };\n\n//   const avatarIcon = setAvatarIcon(theme);\n\n//   return (\n//     <Container>\n//       <div>{username}</div>\n//       {avatarURL ? (\n//         <Avatar src={avatarURL} alt=\"User Avatar\" onClick={openModal} />\n//       ) : (\n//         <UserIcon onClick={openModal}>\n//         <svg className={`icon-user`} width=\"32\" height=\"32\">\n//           <use href={Sprite + avatarIcon} />\n//         </svg>\n//       </UserIcon>\n//       )}\n//       {isModalOpen && <EditProfile onClose={closeModal} />}\n//     </Container>\n//   );\n// };\n\n// export default UserInfo;\n","import axios from 'axios';\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://tp-backend-905x.onrender.com';\n\nconst setAuthHeader = token => {\n  axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n};\n\nexport const updateTheme = createAsyncThunk(\n  'user/theme',\n  async (data, { getState, rejectWithValue }) => {\n    try {\n      const state = getState();\n      setAuthHeader(state.auth.token);\n      const response = await axios.patch('/api/users/theme', data);\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  }\n);\n","import { createSlice } from '@reduxjs/toolkit';\nimport { updateTheme } from './operations';\n\nconst initialState = {\n  theme: null,\n  isLoading: false,\n  error: null,\n};\n\nconst themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    setTheme: (state, action) => {\n      return action.payload;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(updateTheme.pending, state => {\n        state.isLoading = true;\n      })\n      .addCase(updateTheme.fulfilled, (state, action) => {\n        state.theme = action.payload.theme;\n        state.isLoading = false;\n      })\n      .addCase(updateTheme.rejected, (state, action) => {\n        // state.error = action.payload;\n        state.isLoading = false;\n      });\n  },\n});\n\nexport const { setTheme } = themeSlice.actions;\nexport const themeReducer = themeSlice.reducer;\n","export const selectTheme = (state) => state.theme;","import styled from '@emotion/styled';\n\nexport const SidebarBlock = styled.aside`\n  display: flex;\n  flex-direction: column;\n  width: 260px;\n  min-height: 100vh;\n  padding: 24px;\n\n  background-color: var(--nav_bgc);\n  color: var(--nav_main_color);\n  @media (max-width: 1439px) {\n    display: none;\n  }\n  &.open {\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 1;\n  }\n`;\nexport const TitleBlock = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 60px;\n`;\nexport const SvgLightning = styled.svg`\n  width: 32px;\n  height: 32px;\n  margin-right: 8px;\n  border-radius: 6px;\n`;\nexport const Title = styled.h3`\n  color: var(--nav_main_color);\n  text-shadow: 0px 4px 4px 0px rgba(0, 0, 0, 0.25);\n  font-family: Poppins;\n  font-weight: 600;\n  letter-spacing: -0.64px;\n`;\nexport const MyBoardTitle = styled.p`\n  margin-bottom: 8px;\n\n  color: var(--nav_second_color);\n  font-family: Poppins;\n  font-size: 12px;\n  letter-spacing: -0.24px;\n`;\nexport const BoardTitleBlock = styled.div`\n  display: flex;\n  gap: 50px;\n  align-items: center;\n  margin-bottom: 40px;\n  padding: 14px 0;\n  border-top: 1px solid var(--line_color);\n  border-bottom: 1px solid var(--line_color);\n\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\nexport const ButtonAdd = styled.button`\n  width: 40px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  padding: 10px 8px;\n  border-radius: 6px;\n  border: none;\n\n  background-color: var(--create_normal);\n  &:hover {\n    background-color: var(--create_active);\n  }\n  > svg {\n    stroke: var(--create_plus_color);\n  }\n`;\nexport const BoardList = styled.li`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n`;\nexport const TitleBoard = styled.div`\n  display: flex;\n`;\nexport const BoardIcons = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\nexport const EditIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n\n  stroke: var(--nav_second_color)\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const NeedHelpBlock = styled.div`\n  border-radius: 8px;\n  margin-bottom: 24px;\n  padding: 20px;\n  margin-top: auto;\n\n  background-color: var(--need_bgc);\n  color: var(--nav_main_color);\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const HelpContent = styled.p`\n  line-height: 20px;\n  letter-spacing: -0.28px;\n  color: var(--nav_main_color);\n  > span {\n    color: var(--span_color);\n  }\n`;\nexport const NeedHelpButton = styled.button`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  border: none;\n  margin-top: 20px;\n  padding: 0;\n\n  color: var(--nav_main_color);\n`;\nexport const SvgHelp = styled.svg`\n  stroke: var(--nav_main_color);\n  fill: rgba(0, 0, 0, 0);\n  width: 20px;\n  height: 20px;\n  margin-right: 8px;\n`;\nexport const LogoutBtn = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  border: none;\n\n  color: var(--nav_main_color)\n  font-family: Poppins;\n  font-weight: 500;\n  font-size: 16px;\n  background-color: transparent;\n  padding: 0;\n  > svg {\n    stroke: var(--logout_fill);\n    &:hover {\n      stroke: var(--logout_fill_active);\n    }\n  }\n`;\n\nexport const Flower = styled.img`\n  margin-bottom: 14px;\n  display: block;\n`;\n","import styled from '@emotion/styled';\n\nexport const MainButton = styled.button`\n  width: 100%;\n\n  border-radius: 8px;\n  border: none;\n\n  padding: 14px;\n\n  color: var(--text_btn);\n  background: var(--normal_btn);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: 'Poppins';\n\n  &:hover {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  width: 100%;\n  margin-bottom: 14px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n\nexport const Textarea = styled(Field)`\n  width: 100%;\n  height: 120px;\n  margin-bottom: 24px;\n  padding: 14px 18px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  outline: none;\n  opacity: 0.4;\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-family: Poppins;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  &:hover,\n  &:focus,\n  &:active {\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import * as yup from 'yup';\n\nexport const HelpSchema = yup.object().shape({\n  email: yup.string().email('Invalid email format').required('Email is required').matches(\n    /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/,\n    'Invalid email format'\n  ),\n  comment: yup.string().min(10, 'Comment must be at least 10 characters').max(500, 'Name must be no more than 500 characters').required('Comment is required'),\n});","import { Formik, ErrorMessage, Form } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { needHelp } from '../../redux/auth/operations';\nimport { MainButton } from 'components/Button/Button';\nimport { Input, Textarea } from './NeedHelp.styled';\nimport { HelpSchema } from 'schemas/helpSchema';\n\nconst initialValues = {\n  email: '',\n  comment: '',\n};\n\nconst NeedHelpForm = ({ handleCloseModal }) => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { email, comment } = values;\n    console.log({ email, comment });\n    try {\n      const result = await dispatch(needHelp({ email, comment }));\n      if (needHelp.fulfilled.match(result)) {\n        console.log('Request successful');\n        resetForm(initialValues);\n        handleCloseModal();\n      } else {\n      }\n    } catch (err) {\n      console.log('Error:', err.message);\n    }\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={HelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ errors, touched, submitCount }) => (\n          <Form autoComplete=\"off\">\n            <Input type=\"email\" name=\"email\" placeholder=\"Email address\" />\n            <ErrorMessage name=\"email\" />\n            <div>\n              <Textarea\n                component=\"textarea\"\n                name=\"comment\"\n                placeholder=\"Comment\"\n                style={{\n                  resize: 'none',\n                }}\n              />\n              <ErrorMessage name=\"comment\" />\n              {submitCount > 0 &&\n                errors.comment &&\n                (!touched.comment || touched.comment) && (\n                  <div>Please enter a comment</div>\n                )}\n            </div>\n            <MainButton type=\"submit\">Send</MainButton>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default NeedHelpForm;\n\nNeedHelpForm.propTypes = {\n  handleCloseModal: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Modal from '../Modal/Modal';\nimport NeedHelpForm from './NeedHelpForm';\n\nconst NeedHelpModal = ({ closeModal }) => {\n  const handleCloseModal = () => {\n    closeModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={'Need help'}>\n      <NeedHelpForm handleCloseModal={handleCloseModal} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default NeedHelpModal;\n\nNeedHelpModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n};","export const selectBoards = state => state.boards.boards;\n","import * as Yup from 'yup';\n\nexport const addBoardSchema = Yup.object().shape({\n  title: Yup.string().required('Title is required'),\n});\n","import styled from '@emotion/styled';\nimport { ErrorMessage, Field } from 'formik';\n\nexport const StyledInputField = styled(Field)`\n  width: 302px;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  opacity: 0.4;\n  background-color: var(--modal_bgc);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  outline: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus,\n  &:active {\n    outline: none;\n    opacity: 1;\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledSubtitle = styled.p`\n  margin-bottom: 14px;\n  color: var(--modal_main_color);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const IconsWrapper = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  flex-direction: row;\n  gap: 8px;\n`;\n\nexport const StyledSVG = styled.svg`\n  width: 18px;\n  height: 18px;\n  fill: rgba(0, 0, 0, 0);\n  stroke: var(--modal_second_color);\n`;\n\nexport const StyledRadioField = styled(Field)`\n  display: none;\n  &:checked + img {\n    border: 1px solid var(--modal_bgc);\n    border-radius: 5px;\n    transform: scale(1.2);\n  }\n  &:checked + svg {\n    stroke: var(--modal_main_color);\n  }\n  &:hover + img {\n    border: 1px solid var(--modal_bgc);\n    border-radius: 5px;\n  }\n`;\n\nexport const BgImagesWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 4px;\n  width: 252px;\n  height: 60px;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form } from 'formik';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { nanoid } from '@reduxjs/toolkit';\nimport sprite from '../../images/sprite.svg';\nimport { addBoardSchema } from 'schemas';\nimport {\n  BgImagesWrapper,\n  ErrorMsg,\n  IconsWrapper,\n  StyledInputField,\n  StyledRadioField,\n  StyledSVG,\n  StyledSubtitle,\n} from './ModalBoard.styles';\nimport { MainButton } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport { createBoard, editBoard } from 'redux/boards/boardOperations';\n\nconst icons = [\n  'icon-project',\n  'icon-star',\n  'icon-loading',\n  'icon-puzzle-piece',\n  'icon-container',\n  'icon-lightning',\n  'icon-colors',\n  'icon-hexagon',\n];\n\nconst backgrounds = [\n  'bg1',\n  'bg2',\n  'bg3',\n  'bg4',\n  'bg5',\n  'bg6',\n  'bg7',\n  'bg8',\n  'bg9',\n  'bg10',\n  'bg11',\n  'bg12',\n  'bg13',\n  'bg14',\n  'bg15',\n  'bg16',\n];\n\nfunction ModalBoard({ btnContent, closeModal, boardData }) {\n  const dispatch = useDispatch();\n\n  const initialValues =\n    btnContent === 'Create'\n      ? {\n          title: '',\n          icon: icons[0],\n          background: backgrounds[0],\n        }\n      : {\n          title: boardData?.title,\n          icon: boardData?.icon,\n          background: boardData?.background,\n        };\n\n  const handleSubmit = (values, { resetForm }) => {\n    const boardId = `3${uuidv4().replace(/-/g, '')}`;\n\n    const newBoard = {\n      id: boardId,\n      title: values.title,\n      icon: values.icon,\n      background: values.background,\n      boardsData: { tasks: {}, columns: {}, columnOrder: [] },\n    };\n    if (btnContent === 'Create') {\n      dispatch(createBoard(newBoard));\n    } else {\n      console.log(newBoard);\n      dispatch(editBoard({ newBoard, id: boardData._id }));\n    }\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={addBoardSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ handleChange, values }) => (\n        <Form autoComplete=\"off\">\n          <StyledInputField\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title\"\n            onChange={handleChange}\n            value={values.title}\n          />\n          <ErrorMsg name=\"title\" component=\"p\" />\n          <StyledSubtitle>Icons</StyledSubtitle>\n          <IconsWrapper>\n            {icons.map(icon => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"icon\"\n                  value={icon}\n                  onChange={handleChange}\n                  checked={values.icon === icon}\n                />\n                <StyledSVG>\n                  <use href={`${sprite}#${icon}`}></use>\n                </StyledSVG>\n              </label>\n            ))}\n          </IconsWrapper>\n          <StyledSubtitle>Background</StyledSubtitle>\n          <BgImagesWrapper>\n            {backgrounds.map((background, i) => (\n              <label key={nanoid()}>\n                <StyledRadioField\n                  type=\"radio\"\n                  name=\"background\"\n                  value={background}\n                  onChange={handleChange}\n                  checked={values.background === background}\n                />\n                <img\n                  src={require(`../../images/backgrounds/${background}.jpg`)}\n                  alt={`background variant ${i + 1}`}\n                  width=\"28\"\n                />\n              </label>\n            ))}\n          </BgImagesWrapper>\n          <MainButton type=\"submit\">{btnContent}</MainButton>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nModalBoard.propTypes = {\n  btnContent: PropTypes.string.isRequired,\n  closeModal: PropTypes.func.isRequired,\n};\n\nexport default ModalBoard;\n","import ModalBoard from './ModalBoard';\n\nexport default ModalBoard;\n","import {\n  SidebarBlock,\n  ButtonAdd,\n  SvgLightning,\n  Title,\n  TitleBlock,\n  BoardTitleBlock,\n  MyBoardTitle,\n  NeedHelpBlock,\n  NeedHelpButton,\n  SvgHelp,\n  HelpContent,\n  LogoutBtn,\n  Flower,\n  BoardList,\n  EditIcon,\n  BoardIcons,\n  TitleBoard,\n} from './Sidebar.styled';\nimport sprite from '../../images/sprite.svg';\nimport flower from '../../images/flower.png';\nimport { useState, useEffect } from 'react';\nimport { logOut } from 'redux/auth/operations';\nimport NeedHelpModal from 'components/NeedHelp/NeedHelpModal';\nimport { deleteBoard } from 'redux/boards/boardOperations';\nimport { selectBoards } from 'redux/boards/boardsSelectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getBoards } from 'redux/boards/boardOperations';\nimport Modal from 'components/Modal/Modal';\nimport ModalBoard from 'components/ModalBoard';\n\nconst actionsList = { add: 'add', edit: 'edit' };\n\nexport function Sidebar({ theme, isOpen }) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalType, setModalType] = useState(actionsList.add);\n  const [boardData, setBoardData] = useState(null);\n  const [isShow, setIsShow] = useState(false);\n  const boards = useSelector(selectBoards);\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      dispatch(getBoards());\n    },\n    [dispatch],\n    boards\n  );\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  const handleModalType = e => {\n    const buttonAction = e.currentTarget.ariaLabel;\n    const editButtonId = e.currentTarget.getAttribute('data-board-id') || '';\n    if (buttonAction === actionsList.add) {\n      setModalType(actionsList.add);\n      toggleModal();\n    } else {\n      setModalType(actionsList.edit);\n      setBoardData(boards.filter(board => board._id === editButtonId)[0]);\n      toggleModal();\n    }\n  };\n\n  const showModal = () => {\n    setIsShow(true);\n  };\n\n  const closeModal = () => {\n    setIsShow(false);\n  };\n\n  return (\n    <SidebarBlock className={`theme-${theme} ${isOpen ? 'open' : 'closed'}`}>\n      <TitleBlock>\n        <SvgLightning>\n          <use href={`${sprite}#icon-logo`} />\n        </SvgLightning>\n        <Title>Task Pro</Title>\n      </TitleBlock>\n      <MyBoardTitle>My boards</MyBoardTitle>\n      <BoardTitleBlock>\n        <p>Create a new board</p>\n        <ButtonAdd aria-label=\"add\" type=\"button\" onClick={handleModalType}>\n          <svg width={20} height={20}>\n            <use href={`${sprite}#icon-plus`} />\n          </svg>\n        </ButtonAdd>\n      </BoardTitleBlock>\n      <ul>\n        {boards.map(board => (\n          <BoardList key={board._id}>\n            <TitleBoard>\n              <svg width={18} height={18}>\n                <use href={`${sprite}#${board.icon}`} />\n              </svg>\n              {board.title}\n            </TitleBoard>\n            <BoardIcons>\n              <button\n                type=\"button\"\n                aria-label=\"edit\"\n                data-board-id={board._id}\n                onClick={handleModalType}\n              >\n                <EditIcon>\n                  <use href={`${sprite}#icon-pencil`} />\n                </EditIcon>\n              </button>\n              <EditIcon onClick={() => dispatch(deleteBoard(board._id))}>\n                <use href={`${sprite}#icon-trash`} />\n              </EditIcon>\n            </BoardIcons>\n          </BoardList>\n        ))}\n      </ul>\n      {isModalOpen && (\n        <Modal\n          isOpen={toggleModal}\n          handleClose={toggleModal}\n          heading={modalType === actionsList.add ? 'New board' : 'Edit board'}\n        >\n          <ModalBoard\n            btnContent={modalType === actionsList.add ? 'Create' : 'Edit'}\n            closeModal={toggleModal}\n            boardData={boardData}\n          />\n        </Modal>\n      )}\n      <NeedHelpBlock>\n        <Flower src={flower} alt=\"flower\" />\n        <HelpContent>\n          If you need help with <span>TaskPro</span>, check out our support\n          resources or reach out to our customer support team.\n        </HelpContent>\n        <NeedHelpButton type=\"button\" name=\"help\" onClick={showModal}>\n          <SvgHelp>\n            <use href={`${sprite}#icon-help`} />\n          </SvgHelp>\n          Need help?\n        </NeedHelpButton>\n        {isShow && <NeedHelpModal closeModal={closeModal} />}\n      </NeedHelpBlock>\n\n      <LogoutBtn type=\"button\" name=\"logout\" onClick={() => dispatch(logOut())}>\n        <svg width={32} height={32}>\n          <use xlinkHref={`${sprite}#icon-login`}></use>\n        </svg>\n        Log out\n      </LogoutBtn>\n    </SidebarBlock>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const ThemeContainer = styled.div`\nposition: relative;\n`;\n\nexport const ThemeList = styled.ul`\nposition: absolute;\n    top: 100%;\n    left: -10%;\n    transform: translate(-100%, 10%);\n    width: 100px;\n    height: 107px;\n    display: flex;\n  flex-direction: column;\n    padding: 18px 44px 18px 18px;\n    gap: 4px;\n  background: var(--theme_bgc);\n  box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n  border-radius: 8px;\n  border: 1px solid #BEDBB0;\n  cursor: pointer;\n  z-index: 99;\n    z-index: 3;\n   }\n`;\n\nexport const ThemeItem = styled.li`\nfont-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  color: var(--theme_color);\n  background-color: var(--theme_bgc);\n    cursor: pointer;\n    &:hover {\n      // background-color: var(--theme_active);\n      color: var(--theme_text);\n   }\n`;\n\n\n\n\n\n\n// export const StyledSelect = styled(Select)`\n//   /* Стилі для вибраних тем */\n//   .css-1nmdiq5-menu {\n//     position: absolute;\n//     top: 100%;\n//     left: -10%;\n//     transform: translate(-100%, 10%);\n//     width: 100px;\n//     height: 107px;\n//     padding-left: 18px;\n//     border-radius: 8px;\n//   border: 1px solid #BEDBB0;\n//   background: #FCFCFC;\n//   box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10); \n//     z-index: 1;\n//   }\n\n//   .css-1f769on{ \n\n//   }\n\n//   /* Стилі для опцій */\n \n//   .css-d7l1ni-option \n//   css-10wo9uf-option{\n//     font-family: Poppins;\n//   font-size: 14px;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: normal;\n//   letter-spacing: -0.28px;\n//   color: var(--theme_color);\n//   background-color: var(--theme_bgc);\n//     cursor: pointer;\n//     &:hover {\n//       // background-color: var(--theme_active);\n//       color: var(--theme_text);\n//     }\n//   }\n// `;\n\n// export const SelectStyles = {\n//   control: provided => ({\n//     ...provided,\n//     display: 'none',\n//     // Додайте стилі для контролу (значення) Select\n//   }),\n//   option: provided => ({\n//     ...provided,\n//      // Приховати опції\n//   }),\n// };\n\n\n\n// export const Select = styled.select`\n//   // position: absolute;\n//   bottom: -70px;\n//   left: 50%;\n//   transform: translateX(-50%);\n//   padding: 18px 44px 18px 18px;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: center;\n//   gap: 4px;\n//   background: var(--theme_bgc);\n//   box-shadow: 0px 4px 16px 0px var(--theme_shadow);\n//   border-radius: 8px;\n//   border: 1px solid var(--border_theme);\n//   cursor: pointer;\n//   z-index: 99;\n//   appearance: none; /* Remove default arrow */\n// `;\n\n// export const Option = styled.option`\n//   font-family: Poppins;\n//   font-size: 14px;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: normal;\n//   letter-spacing: -0.28px;\n//   color: var(--theme_color);\n//   background-color: var(--theme_bgc); /* Set background color */\n\n//   &:hover,\n//   &:focus,\n//   &:active {\n//     background-color: var(--theme_active);\n//     color: var(--theme_text); /* Change text color on interaction */\n//   }\n// `;\n\n\n  // .css-1wa3eu0-singleValue {\n  //   // color: var(--close_active);\n  //      overflow: hidden;\n  // }\n\n   /* Відобразити опції */\n  //  .css-1s2ci2r-menu {\n     \n  // }\n\n  // export const SelectContainer = styled.div`\n//   position: absolute;\n//   top: 100%;\n//   left: -10%;\n//   transform: translate(-100%, 10%);\n//   width: 100px;\n//   height: 107px;\n//   // padding-left: 18px;\n//   border-radius: 8px;\n// border: 1px solid #BEDBB0;\n// background: #FCFCFC;\n// box-shadow: 0px 4px 16px 0px rgba(17, 17, 17, 0.10); \n// `;","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectUser } from 'redux/auth/selectors';\nimport { updateUser } from 'redux/auth/operations';\nimport { ThemeContainer, ThemeList, ThemeItem } from './ThemeSelector.styled';\n\nconst ThemeSelector = ({ onClose }) => {\n  const { theme } = useSelector(selectUser);\n  const dispatch = useDispatch();\n  const [currentTheme, setCurrentTheme] = useState(theme);\n\n  useEffect(() => {\n    document.body.classList.remove('light', 'dark', 'violet');\n    document.body.classList.add(currentTheme);\n  }, [currentTheme]);\n\n  const themeOptions = [\n    { value: 'light', label: 'Light' },\n    { value: 'dark', label: 'Dark' },\n    { value: 'violet', label: 'Violet' },\n  ];\n\n  useEffect(() => {\n    document.body.classList.remove('light', 'dark', 'violet');\n    document.body.classList.add(currentTheme);\n  }, [currentTheme]);\n\n  const onHandleTheme = async newTheme => {\n    console.log(newTheme);\n    setCurrentTheme(newTheme);\n\n    try {\n      await dispatch(updateUser({ theme: newTheme.toUpperCase() }));\n      onClose();\n    } catch (error) {\n      console.error('Failed to update theme:', error);\n    }\n  };\n\n  return (\n    <ThemeContainer>\n      <ThemeList>\n        {themeOptions.map(option => (\n          <ThemeItem\n            key={option.value}\n            onClick={() => onHandleTheme(option.value)}\n            className={currentTheme === option.value ? 'active' : ''}\n          >\n            {option.label}\n          </ThemeItem>\n        ))}\n      </ThemeList>\n    </ThemeContainer>\n  );\n};\n\nexport default ThemeSelector;\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { selectUser } from 'redux/auth/selectors';\n// import { updateUser } from 'redux/auth/operations';\n// import {  Container, StyledSelect, SelectStyles } from './ThemeSelector.styled';\n\n// const ThemeSelector = ({ isOpen, onClose }) => {\n//   const { theme } = useSelector(selectUser);\n//   const dispatch = useDispatch();\n//   const [currentTheme, setCurrentTheme] = useState(theme);\n\n//   useEffect(() => {\n//     document.body.classList.remove('light', 'dark', 'violet');\n//     document.body.classList.add(currentTheme);\n//   }, [currentTheme]);\n\n//   const themeOptions = [\n//     { value: 'light', label: 'Light' },\n//     { value: 'dark', label: 'Dark' },\n//     { value: 'violet', label: 'Violet' },\n//   ];\n\n//   const onHandleTheme = async selectedOption => {\n//     console.log(selectedOption);\n//     const newTheme = selectedOption.value;\n\n//     setCurrentTheme(newTheme);\n\n//     try {\n//       await dispatch(updateUser({ theme: newTheme }));\n//       onClose();\n//     } catch (error) {\n//       console.error('Failed to update theme:', error);\n//     }\n//   };\n\n//   return (\n//     <Container>\n//       <StyledSelect\n//         value={themeOptions.find(option => option.value === currentTheme)}\n//         onChange={onHandleTheme}\n//         options={themeOptions}\n//         isSearchable={false}\n//         styles={SelectStyles}\n//         menuIsOpen={isOpen}\n//       />\n//     </Container>\n//   );\n// };\n\n// export default ThemeSelector;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: auto;\n  max-width: 100%;\n  // color: #ffffff;\n  height: 68px;\n  padding: 14px 20px;\n  background-color: var(--header_bgc);\n  color: var(--header_theme_text);\n\n\n  @media (max-width: 1440px) {\n    padding: 18px 32px;\n  }\n  @media (max-width: 768px) {\n    padding: 18px 24px;\n  }\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 24px;\n  height: 24px;\n  stroke: var(--header_user_text);\n\n  @media screen and (min-width: 375px) {\n    width: 32px;\n    height: 32px;\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\nexport const HeaderWrap = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n`;\n\nexport const HeaderNav = styled.div`\n// position: relative;\ndisplay: inline-flex;\njustify-content: center;\nalign-items: center;\ngap: 4px;\nmargin-right: 14px;\nwidth: 80px;\ncursor: pointer;\n`;\n\nexport const SelectIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  margin-left: 4px;\n  stroke: var(--chevron-down);\n  z-index: 999;\n`;\n\nexport const Text = styled.div`\ncolor: var(--header_theme_text);\nfont-family: Poppins;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\nletter-spacing: -0.28px;\n`;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UserInfo from 'components/UserInfo/UserInfo';\nimport { setTheme } from 'redux/theme/themeSlice';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport ThemeSelector from 'components/ThemeSelector/ThemeSelector';\nimport {\n  Container,\n  HeaderNav,\n  MenuIcon,\n  HeaderWrap,\n  SelectIcon,\n  Text,\n} from './Header.styled';\nimport Sprite from '../../images/sprite.svg';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const theme = useSelector(selectTheme);\n  const [isSideBarOpen, setSideBarOpen] = useState(false);\n  const [isThemeSelectorOpen, setThemeSelectorOpen] = useState(false);\n\n  useEffect(() => {\n    const storedTheme = localStorage.getItem('theme');\n    if (storedTheme) {\n      dispatch(setTheme(storedTheme));\n    }\n    let timeout;\n\n    if (isSideBarOpen) {\n      timeout = setTimeout(() => {\n        document.addEventListener('click', handleOutsideClick);\n      }, 100);\n    } else {\n      document.removeEventListener('click', handleOutsideClick);\n    }\n\n    return () => {\n      clearTimeout(timeout);\n      document.removeEventListener('click', handleOutsideClick);\n    };\n  }, [dispatch, isSideBarOpen]);\n\n  const handleOutsideClick = e => {\n    if (!e.target.closest('aside')) {\n      setSideBarOpen(false);\n    }\n  };\n\n  const toggleSideBar = () => {\n    setSideBarOpen(!isSideBarOpen);\n  };\n\n  const toggleThemeSelector = () => {\n    setThemeSelectorOpen(!isThemeSelectorOpen);\n  };\n\n  return (\n    <Container className={`theme-${theme}`}>\n      <div onClick={toggleSideBar}>\n        <MenuIcon className={`icon-menu theme-${theme}`} width=\"32\" height=\"32\">\n          <use href={`${Sprite}#icon-menu`} />\n        </MenuIcon>\n      </div>\n      {isSideBarOpen && <Sidebar />}\n      <HeaderWrap>\n        <HeaderNav>\n          <div>\n            <SelectIcon width=\"16\" height=\"16\" onClick={toggleThemeSelector}>\n              <use href={`${Sprite}#icon-chevron-down`} />\n            </SelectIcon>\n          </div>\n          <Text>Theme</Text>\n        </HeaderNav>\n        {isThemeSelectorOpen && (\n          <ThemeSelector\n          isOpen={isThemeSelectorOpen} \n          onClose={() => setThemeSelectorOpen(false)}\n          onToggleThemeSelector={toggleThemeSelector} \n        />\n        )}\n        <UserInfo />\n      </HeaderWrap>\n      {isSideBarOpen && <Sidebar theme={theme} isOpen={isSideBarOpen} />}\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const HeadContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 24px;\n`;\n\nexport const HeadText = styled.p`\n  color: var(--board_main_color);\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 18px;\n  line-height: normal;\n  letter-spacing: -0.36px;\n`;\n","import { HeadContainer, HeadText } from './HeaderDashboard.styled';\n\nexport const HeaderDashboard = () => {\n  return (\n    <HeadContainer>\n      <HeadText>Name Board</HeadText>\n      <HeadText>Filters</HeadText>\n    </HeadContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const LineContainer = styled.div`\n  position: absolute;\n  width: 4px;\n  top: 0;\n  left: -4px;\n  height: 100%;\n  border-radius: 4px 0px 0px 4px;\n  background: #8fa1d0;\n`;\n\nexport const TaskContainer = styled.li`\n  position: relative;\n  padding: 14px 20px;\n  border-top-right-radius: 8px;\n  border-bottom-right-radius: 8px;\n  background-color: ${props =>\n    props.isDragging ? 'var(--board_task_bgc)' : 'var(--board_task_bgc)'};\n  margin-bottom: 8px;\n`;\n\nexport const TaskTitle = styled.h2`\n  margin-bottom: 8px;\n\n  color: var(--board_main_color);\n  font-family: 'Poppins';\n  font-weight: 600;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const TaskDesc = styled.p`\n  margin-bottom: 14px;\n  width: 290px;\n  height: 38px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  color: var(--board_filter_color);\n  font-family: 'Poppins';\n  font-weight: 400;\n  font-size: 12px;\n  line-height: calc(16 / 12);\n  letter-spacing: -0.24px;\n`;\n\nexport const TaskVector = styled.div`\n  width: 290px;\n  height: 1px;\n  background-color: var(--line_color);\n  margin-bottom: 14px;\n`;\n\nexport const TaskBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const TaskContent = styled.div`\n  display: flex;\n  gap: 14px;\n`;\n\nexport const TaskPrior = styled.div`\n  > p {\n    margin-bottom: 5.5px;\n\n    color: var(--board_second_color);\n    font-family: 'Poppins';\n    font-size: 8px;\n    line-height: normal;\n    letter-spacing: -0.16px;\n  }\n  > div {\n    width: 12px;\n    height: 12px;\n    border-radius: 50%;\n    background-color: violet;\n  }\n`;\n\nexport const TaskDeadline = styled.div`\n  > p {\n    margin-bottom: 5.5px;\n\n    color: var(--board_second_color);\n    font-family: 'Poppins';\n    font-size: 8px;\n    line-height: normal;\n    letter-spacing: -0.16px;\n  }\n  > span {\n    color: var(--board_main_color);\n    font-family: Poppins;\n    font-size: 10px;\n    font-style: normal;\n    font-weight: 400;\n    line-height: normal;\n    letter-spacing: -0.2px;\n  }\n`;\n\nexport const TestListIcon = styled.ul`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  > li {\n    display: flex;\n    align-items: center;\n    > button {\n      padding: 0;\n      border: none;\n      background-color: rgba(0, 0, 0, 0);\n      > svg {\n        stroke: var(--modal_second_color);\n        fill: rgba(0, 0, 0, 0);\n        &:hover,\n        &:focus,\n        &:active {\n          stroke: var(--icon_active_color);\n        }\n      }\n    }\n  }\n`;\n","import {\n  LineContainer,\n  TaskContainer,\n  TaskTitle,\n  TaskDesc,\n  TaskVector,\n  TaskBox,\n  TaskContent,\n  TaskPrior,\n  TaskDeadline,\n  TestListIcon,\n} from './Task.styled';\nimport { Draggable } from 'react-beautiful-dnd';\nimport sprite from '../../images/sprite.svg';\n\nexport const Task = ({ task, index }) => {\n  return (\n    <Draggable draggableId={task.id} index={index}>\n      {(provided, snapshot) => (\n        <TaskContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n          isDragging={snapshot.isDragging}\n        >\n          <LineContainer />\n          {/* <button onClick={() => console.log('awdawd')}></button> */}\n          <TaskTitle>{task.title}</TaskTitle>\n          <TaskDesc>{task.description}</TaskDesc>\n          <TaskVector />\n          <TaskBox>\n            <TaskContent>\n              <TaskPrior>\n                {/* <p>{task.priority}</p> */}\n                <p>Priority</p>\n                <div />\n              </TaskPrior>\n              <TaskDeadline>\n                <p>Deadline</p>\n                <span>{task.deadline}</span>\n              </TaskDeadline>\n            </TaskContent>\n            <TestListIcon>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-bell`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-pencil`} />\n                  </svg>\n                </button>\n              </li>\n              <li>\n                <button>\n                  <svg width={16} height={16}>\n                    <use xlinkHref={`${sprite}#icon-trash`} />\n                  </svg>\n                </button>\n              </li>\n            </TestListIcon>\n          </TaskBox>\n        </TaskContainer>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  width: 335px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  border: none;\n  padding: 14px 78px;\n  cursor: pointer;\n\n  color: var(--text_btn);\n  background: var(--normal_btn);\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: var(--active_btn);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const BoxAddSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background-color: var(--plus_bgc);\n  margin-right: 7px;\n`;\n\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--plus_color);\n`;\n","import sprite from '../../../images/sprite.svg';\nimport { Button, BoxAddSvg, SvgAdd } from './BtnColumn.styled';\n\nconst BtnColumn = ({ text, onClick }) => {\n  return (\n    <Button onClick={onClick}>\n      <BoxAddSvg>\n        <SvgAdd>\n          <use href={`${sprite}#icon-plus`} />\n        </SvgAdd>\n      </BoxAddSvg>\n      {text}\n    </Button>\n  );\n};\n\nexport default BtnColumn;\n","import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled(Field)`\n  width: 100%;\n  padding: 14px 18px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--input_color);\n  opacity: 0.4;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n\n  color: var(--modal_main_color);\n  background-color: var(--modal_bgc);\n  font-size: 18px;\n  font-family: Poppins;\n  font-weight: 500;\n  &:hover,\n  &:focus,\n  &:active {\n    background-color: var(--modal_bgc);\n    opacity: 1;\n    box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.08);\n  }\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\n\nimport BtnColumn from '../BtnColumn/BtnColumn';\nimport { FormContainer, Input } from './ModalColumn.styled';\n\nconst ModalColumn = ({ handleSubmit, nameTitle }) => {\n  const [visible, setVisible] = useState(false);\n  const [title, setTitle] = useState(nameTitle || '');\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleFormSubmit = () => {\n    handleSubmit(title);\n    handlerVisible();\n  };\n\n  return (\n    <Formik initialValues={{ title: nameTitle }} onSubmit={handleFormSubmit}>\n      <FormContainer>\n        <Input\n          name=\"title\"\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={e => {\n            setTitle(e.target.value);\n          }}\n        />\n        <BtnColumn type=\"submit\" text={'Add'} />\n      </FormContainer>\n    </Formik>\n  );\n};\nexport default ModalColumn;\n","import Modal from '../../Modal/Modal';\nimport ModalColumn from '../ModalColumn/ModalColumn';\n\nconst AddColumn = ({ closeColumnModal, handleSubmit, title, nameTitle }) => {\n  const handleCloseModal = () => {\n    closeColumnModal();\n  };\n\n  return (\n    <div>\n      <Modal isOpen={true} handleClose={handleCloseModal} heading={title}>\n        <ModalColumn handleSubmit={handleSubmit} nameTitle={nameTitle} />\n      </Modal>\n    </div>\n  );\n};\n\nexport default AddColumn;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.li`\n  border-radius: 2px;\n  max-width: 334px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\nexport const TitleBox = styled.div`\n  min-height: 56px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 18px 20px;\n  border-radius: 8px;\n\n  background-color: var(--board_task_bgc);\n`;\n\nexport const Title = styled.h3`\n  color: var(--board_main_color);\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  letter-spacing: -0.28px;\n`;\n\nexport const BoxSvg = styled.div`\n  display: flex;\n  gap: 8px;\n  > button {\n    background-color: transparent;\n    border: none;\n  }\n`;\n\nexport const Svg = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--board_second_color);\n  fill: transparent;\n  &:hover {\n    stroke: var(--active_btn);\n  }\n`;\n\nexport const TaskList = styled.ul`\n  padding: 8px;\n  max-height: 478px;\n  transition: background-color 0.2s ease;\n  background-color: ${props => (props.isDraggingOver ? 'inherit' : 'inherit')};\n\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nexport const ContainerModal = styled.div`\n  width: 200px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #beb7b7;\n  position: absolute;\n  left: 800px;\n  top: 200px;\n`;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { Task } from 'components/Task/Task';\nimport AddColumn from './AddColumn/AddColumn';\nimport BtnColumn from './BtnColumn/BtnColumn';\nimport {\n  Container,\n  Title,\n  TitleBox,\n  TaskList,\n  ContainerModal,\n  Svg,\n  BoxSvg,\n} from './Column.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const Column = ({ column, tasks, index, cardData, setCardData }) => {\n  const [visible, setVisible] = useState(false);\n  const [dataForModal, setDataForModal] = useState(column);\n  const [titleTask, setTitleTask] = useState('');\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  if (true === false) {\n    console.log(setDataForModal);\n  }\n\n  const handleVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleVisibleEdit = () => {\n    setShowEditModal(!showEditModal);\n  };\n\n  const handleSubmit = () => {\n    const taskId = `1${uuidv4().replace(/-/g, '')}`;\n\n    const newTask = {\n      [taskId]: {\n        id: taskId,\n        title: titleTask,\n        description: 'awdawd',\n        priority: 'over',\n        deadline: '22.33.44',\n      },\n    };\n\n    const columnId = dataForModal.id;\n\n    const newColumn = {\n      ...cardData.columns[columnId],\n      taskIds: [...cardData.columns[columnId].taskIds, taskId],\n    };\n\n    setCardData(prevCardData => ({\n      ...prevCardData,\n      tasks: {\n        ...prevCardData.tasks,\n        ...newTask,\n      },\n      columns: {\n        ...prevCardData.columns,\n        [columnId]: newColumn,\n      },\n    }));\n\n    handleVisible();\n  };\n\n  const handleEdit = e => {\n    handleVisibleEdit();\n  };\n\n  const handleSubmitEdit = data => {\n    column.title = data;\n    handleVisibleEdit();\n  };\n\n  const handleDelete = () => {\n    if (tasks.length === 0) {\n      const newColumns = { ...cardData.columns };\n      delete newColumns[column.id];\n\n      setCardData(prevCardData => ({\n        ...prevCardData,\n        columns: newColumns,\n      }));\n    }\n  };\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {provided => (\n        <Container {...provided.draggableProps} ref={provided.innerRef}>\n          <TitleBox {...provided.dragHandleProps}>\n            <Title>{column.title}</Title>\n            <BoxSvg>\n              <button onClick={handleEdit}>\n                <Svg>\n                  <use href={`${sprite}#icon-pencil`} />\n                </Svg>\n              </button>\n              <button onClick={handleDelete}>\n                <Svg>\n                  <use href={`${sprite}#icon-trash`} />\n                </Svg>\n              </button>\n            </BoxSvg>\n          </TitleBox>\n          <Droppable droppableId={column.id} type=\"task\">\n            {(provided, snapshot) => (\n              <TaskList\n                ref={provided.innerRef}\n                {...provided.droppableProps}\n                isDraggingOver={snapshot.isDraggingOver}\n              >\n                {tasks.map((task, index) => (\n                  <Task key={task.id} task={task} index={index} />\n                ))}\n                {provided.placeholder}\n              </TaskList>\n            )}\n          </Droppable>\n          <BtnColumn text={'Add another card'} onClick={handleVisible} />\n          {showEditModal && (\n            <AddColumn\n              title={'Edit column'}\n              nameTitle={column.title}\n              closeColumnModal={handleVisibleEdit}\n              handleSubmit={handleSubmitEdit}\n            />\n          )}\n          {visible && (\n            <ContainerModal>\n              Add Task\n              <label>\n                Task title\n                <input\n                  type=\"text\"\n                  value={titleTask}\n                  onChange={e => {\n                    setTitleTask(e.target.value);\n                  }}\n                />\n              </label>\n              <button type=\"submit\" onClick={handleSubmit}>\n                Add Task\n              </button>\n            </ContainerModal>\n          )}\n        </Container>\n      )}\n    </Draggable>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  display: flex;\n  padding: 0 24px 36px 24px;\n  gap: 34px;\n  overflow-x: auto;\n`;\n\nexport const Container = styled.ul`\n  display: flex;\n  gap: 34px;\n  position: relative;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  border-radius: 8px;\n  border: none;\n  padding: 14px 78px;\n  cursor: pointer;\n\n  color: var(--add_text_color);\n  background: var(--add_btn_bgc);\n  font-family: 'Poppins';\n  font-weight: 500;\n  font-size: 14px;\n  line-height: normal;\n  letter-spacing: -0.28px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    background: var(--create_active);\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\nexport const BoxSvg = styled.span`\n  display: inline-block;\n  width: 28px;\n  height: 28px;\n  padding: 7px;\n  border-radius: 6px;\n  background-color: var(--add_plus_bgc);\n  margin-right: 7px;\n`;\nexport const SvgAdd = styled.svg`\n  width: 14px;\n  height: 14px;\n  stroke: var(--add_plus_color);\n`;\n","import { useState } from 'react';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Column } from 'components/Column/Column';\n//add Elvira\nimport AddColumn from 'components/Column/AddColumn/AddColumn';\nimport {\n  MainContainer,\n  Container,\n  Button,\n  BoxSvg,\n  SvgAdd,\n} from './MainDashboard.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const MainDashboard = ({ cardData, setCardData }) => {\n  // кто будет делать этот блок, обратите внимание что именно приходит в cardData\n  const [visible, setVisible] = useState(false);\n\n  const handlerVisible = () => {\n    setVisible(!visible);\n  };\n\n  const handleSubmit = data => {\n    const columnId = `2${uuidv4().replace(/-/g, '')}`;\n\n    const newColumn = {\n      [columnId]: {\n        id: columnId,\n        title: data,\n        taskIds: [],\n      },\n    };\n\n    setCardData({\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        ...newColumn,\n      },\n      columnOrder: [...cardData.columnOrder, ...[columnId]],\n    });\n\n    handlerVisible();\n  };\n  // Эти три функции ниже отвечают за главный функционал переставления карточек между колонками и в колонках\n  // а так же за анимацию при их передвижение\n  const onDragStart = () => {\n    document.body.style.color = 'inherit';\n    document.body.style.transition = 'background-color 0.2s ease';\n  };\n\n  const onDragUpdate = update => {\n    const { destination } = update;\n    const opacity = destination\n      ? destination.index / Object.keys(cardData.tasks).length\n      : 0;\n\n    document.body.style.backgroundColor = `rgba(153, 141, 217, ${opacity})`;\n  };\n\n  const onDragEnd = result => {\n    document.body.style.color = 'inherit';\n    document.body.style.backgroundColor = 'inherit';\n\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    if (type === 'column') {\n      const newColumnOrder = Array.from(cardData.columnOrder);\n      newColumnOrder.splice(source.index, 1);\n      newColumnOrder.splice(destination.index, 0, draggableId);\n\n      const newState = {\n        ...cardData,\n        columnOrder: newColumnOrder,\n      };\n\n      setCardData(newState);\n\n      return;\n    }\n\n    const start = cardData.columns[source.droppableId];\n    const finish = cardData.columns[destination.droppableId];\n\n    if (start === finish) {\n      const newTaskId = Array.from(start.taskIds);\n      newTaskId.splice(source.index, 1);\n      newTaskId.splice(destination.index, 0, draggableId);\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskId,\n      };\n\n      const newState = {\n        ...cardData,\n        columns: {\n          ...cardData.columns,\n          [newColumn.id]: newColumn,\n        },\n      };\n\n      setCardData(newState);\n      return;\n    }\n\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n    };\n\n    const newState = {\n      ...cardData,\n      columns: {\n        ...cardData.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish,\n      },\n    };\n\n    setCardData(newState);\n  };\n\n  return (\n    <MainContainer>\n      <DragDropContext\n        onDragStart={onDragStart}\n        onDragUpdate={onDragUpdate}\n        onDragEnd={onDragEnd}\n      >\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {provided => (\n            <Container {...provided.droppableProps} ref={provided.innerRef}>\n              {cardData.columnOrder.map((columnId, index) => {\n                const column = cardData.columns[columnId];\n                if (!column) {\n                  return null;\n                }\n                const tasks = column.taskIds.map(\n                  taskId => cardData.tasks[taskId]\n                );\n\n                return (\n                  <Column\n                    key={column.id}\n                    column={column}\n                    tasks={tasks}\n                    index={index}\n                    cardData={cardData}\n                    setCardData={setCardData}\n                  />\n                );\n              })}\n              {provided.placeholder}\n            </Container>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <div>\n        <Button onClick={handlerVisible}>\n          <BoxSvg>\n            <SvgAdd>\n              <use href={`${sprite}#icon-plus`} />\n            </SvgAdd>\n          </BoxSvg>\n          Add another column\n        </Button>\n      </div>\n      {visible && (\n        <>\n          <AddColumn\n            closeColumnModal={handlerVisible}\n            handleSubmit={handleSubmit}\n            title={'Add column'}\n          />\n        </>\n      )}\n    </MainContainer>\n  );\n};\n","export const initialUserModel = {\n  username: 'Best User',\n  email: 'bestUser@gmail.com',\n  password: 'qwerty',\n  avatarURL: '',\n  token: '',\n  theme: 'LIGHT',\n  boards: [\n    {\n      id: '329bbadef31894837aed37f3a6843c396',\n      title: 'Best board',\n      icon: 'vector',\n      background: 'forest',\n      boardsData: {\n        tasks: {\n          '19f0d88c3a50a45f0aa8a111c4dfdd70f': {\n            id: '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n            title: 'Add tasks',\n            description: 'Figure out what to do',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n          '176d3b628c5f44bff97861b5b083a3ff0': {\n            id: '176d3b628c5f44bff97861b5b083a3ff0',\n            title: 'Create a repository',\n            description: 'Instruct someone to create a project repositoryo',\n            priority: 'priority',\n            deadline: '15:00 15.08.2023',\n          },\n        },\n        columns: {\n          '25028b3f295854125bb413ce1a484c0c8': {\n            id: '25028b3f295854125bb413ce1a484c0c8',\n            title: 'To do',\n            taskIds: [\n              '19f0d88c3a50a45f0aa8a111c4dfdd70f',\n              '176d3b628c5f44bff97861b5b083a3ff0',\n            ],\n          },\n          '2622aab9120e046c3971cb4de36555e64': {\n            id: '2622aab9120e046c3971cb4de36555e64',\n            title: 'In progress',\n            taskIds: [],\n          },\n        },\n        columnOrder: [\n          '25028b3f295854125bb413ce1a484c0c8',\n          '2622aab9120e046c3971cb4de36555e64',\n        ],\n      },\n    },\n  ],\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerDashboard = styled.div`\n  width: 100%;\n  background: var(--board_bgc);\n`;\n","import { useState } from 'react';\n\nimport { HeaderDashboard } from 'components/HeaderDashboard/HeaderDashboard';\nimport { MainDashboard } from 'components/MainDashboard/MainDashboard';\nimport { initialUserModel } from 'schemas/initialUserModal';\nimport { ContainerDashboard } from './Dashboard.styled';\n\nexport const Dashboard = () => {\n  // в cardData я поместил именно обект boardsData отдельной boards\n  const [cardData, setCardData] = useState(\n    initialUserModel.boards[0].boardsData\n  );\n\n  return (\n    <ContainerDashboard>\n      <HeaderDashboard />\n      <MainDashboard cardData={cardData} setCardData={setCardData} />\n    </ContainerDashboard>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const HomeContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitlePage = styled.h1`\n  margin: 0 auto;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  text-align: center;\n  line-height: 18px;\n  letter-spacing: -0.28px;\n  width: 486px;\n`;\n\nexport const LinkToCreate = styled.a`\n  color: #bedbb0;\n`;\n\nexport const Container = styled.div`\ndisplay: flex;\n`","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'hooks/themeContext';\nimport Header from 'components/Header/Header';\nimport { Sidebar } from 'components/Sidebar/Sidebar';\nimport { Dashboard } from 'components/Dashboard/Dashboard';\nimport { selectTheme } from 'redux/theme/selectors';\nimport { Container } from './HomePage.styled';\nconst HomePage = () => {\n  const theme = useSelector(selectTheme);\n\n  return (\n    <ThemeProvider>\n      <Container>\n        <Sidebar theme={theme} />\n        <div style={{ width: '100%' }}>\n          <Header theme={theme} />\n          <Dashboard theme={theme} />\n        </div>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default HomePage;\n","var map = {\n\t\"./bg1.jpg\": 7381,\n\t\"./bg10.jpg\": 7029,\n\t\"./bg11.jpg\": 2844,\n\t\"./bg12.jpg\": 6648,\n\t\"./bg13.jpg\": 41,\n\t\"./bg14.jpg\": 506,\n\t\"./bg15.jpg\": 3453,\n\t\"./bg16.jpg\": 6547,\n\t\"./bg2.jpg\": 814,\n\t\"./bg3.jpg\": 8621,\n\t\"./bg4.jpg\": 5502,\n\t\"./bg5.jpg\": 6390,\n\t\"./bg6.jpg\": 1411,\n\t\"./bg7.jpg\": 4102,\n\t\"./bg8.jpg\": 1806,\n\t\"./bg9.jpg\": 1282\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2153;"],"names":["Container","styled","Avatar","UserIcon","Backdrop","ModalWindow","Heading","CloseBtn","children","isOpen","handleClose","heading","document","body","style","overflow","window","addEventListener","event","key","ReactDOM","onClick","e","stopPropagation","xlinkHref","Sprite","getElementById","EditProfileModal","FormBox","Form","LabelPass","LabelText","FieldUser","Field","IconUserWrapper","AvatarImage","SaveBtn","NoneInput","PlusBtn","TextBtn","IconPlus","PasswordView","PasswordIcon","Svg","onSave","useSelector","selectUser","username","email","password","avatarURL","useState","showPassword","setShowPassword","avatarNewURL","setAvatarNewURL","dispatch","useDispatch","togglePasswordVisibility","handleFormSubmit","values","console","log","updateUser","newName","newEmail","newPassword","newPhoto","updateUserAvatar","initialValues","onSubmit","isSubmitting","setFieldValue","type","name","alt","src","className","width","height","href","click","id","onChange","URL","createObjectURL","currentTarget","files","selectedFile","target","startsWith","formData","FormData","append","handleAvatarClick","component","eyeHide","stroke","disabled","onClose","handleCloseModal","theme","isEditProfileModalOpen","setIsEditProfileModalOpen","openEditProfileModal","axios","updateTheme","createAsyncThunk","data","getState","rejectWithValue","state","token","auth","response","message","themeSlice","createSlice","initialState","isLoading","error","reducers","setTheme","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectTheme","reducer","SidebarBlock","TitleBlock","SvgLightning","Title","MyBoardTitle","BoardTitleBlock","ButtonAdd","BoardList","TitleBoard","BoardIcons","EditIcon","NeedHelpBlock","HelpContent","NeedHelpButton","SvgHelp","LogoutBtn","Flower","MainButton","Input","Textarea","HelpSchema","yup","shape","required","matches","comment","min","max","handleSubmit","resetForm","needHelp","result","validationSchema","errors","touched","submitCount","autoComplete","placeholder","resize","closeModal","selectBoards","boards","addBoardSchema","Yup","title","StyledInputField","ErrorMsg","ErrorMessage","StyledSubtitle","IconsWrapper","StyledSVG","StyledRadioField","BgImagesWrapper","icons","backgrounds","btnContent","boardData","icon","background","newBoard","uuidv4","replace","boardsData","tasks","columns","columnOrder","createBoard","editBoard","_id","handleChange","value","map","checked","sprite","nanoid","i","require","actionsList","Sidebar","isModalOpen","setIsModalOpen","modalType","setModalType","setBoardData","isShow","setIsShow","useEffect","getBoards","toggleModal","handleModalType","buttonAction","ariaLabel","editButtonId","getAttribute","filter","board","deleteBoard","logOut","ThemeContainer","ThemeList","ThemeItem","currentTheme","setCurrentTheme","classList","remove","add","onHandleTheme","newTheme","toUpperCase","label","option","MenuIcon","HeaderWrap","HeaderNav","SelectIcon","Text","isSideBarOpen","setSideBarOpen","isThemeSelectorOpen","setThemeSelectorOpen","timeout","storedTheme","localStorage","getItem","setTimeout","handleOutsideClick","removeEventListener","clearTimeout","closest","toggleThemeSelector","onToggleThemeSelector","HeadContainer","HeadText","HeaderDashboard","LineContainer","TaskContainer","props","isDragging","TaskTitle","TaskDesc","TaskVector","TaskBox","TaskContent","TaskPrior","TaskDeadline","TestListIcon","Task","task","index","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","description","deadline","Button","BoxAddSvg","SvgAdd","text","FormContainer","nameTitle","visible","setVisible","setTitle","closeColumnModal","TitleBox","BoxSvg","TaskList","isDraggingOver","ContainerModal","Column","column","cardData","setCardData","dataForModal","titleTask","setTitleTask","showEditModal","setShowEditModal","handleVisible","handleVisibleEdit","taskId","newTask","priority","columnId","newColumn","taskIds","prevCardData","handleEdit","handleSubmitEdit","handleDelete","length","newColumns","droppableId","droppableProps","MainContainer","MainDashboard","handlerVisible","onDragStart","color","transition","onDragUpdate","update","destination","opacity","Object","keys","backgroundColor","onDragEnd","source","start","finish","startTaskIds","Array","from","splice","newStart","finishTaskIds","newFinish","newState","newTaskId","newColumnOrder","direction","initialUserModel","ContainerDashboard","Dashboard","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve","module","exports"],"sourceRoot":""}